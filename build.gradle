plugins {
    id 'org.spongepowered.plugin' version '0.5.2'
    id 'nebula.provided-base' version '3.1.0'
    id 'net.minecrell.licenser' version '0.1.5'
}

group = 'net.minecrell'
description = 'Simple Sponge plugin extending the status ping API with internal protocol versions'

allprojects {
    apply plugin: 'java'
    apply plugin: 'nebula.provided-base'

    version = '0.4-SNAPSHOT'

    // Why is ForgeGradle messing with this!?
    afterEvaluate {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    repositories {
        mavenCentral()
        maven {
            name = 'sponge'
            url = 'http://repo.spongepowered.org/maven'
        }
    }

    dependencies {
        provided 'org.spongepowered:spongeapi:4.0.3'
    }
}

processResources {
    from 'LICENSE'
}

subprojects.each {
    evaluationDependsOn it.path
}

subprojects {
    group = 'net.minecrell.statusprotocol'

    dependencies {
        compile rootProject
    }

    reobf.jar {
        mappingType = 'SEARGE'
    }
}

task implJar(type: Jar, dependsOn: 'jar') {
    from sourceSets.main.output

    exclude 'org/spongepowered/**'
    subprojects.each {
        dependsOn it.tasks.reobfJar
        from zipTree(it.tasks.jar.archivePath)
    }
}

task sourceJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource

    exclude 'org/spongepowered/**'
    subprojects.each {
        dependsOn it.tasks.sourceJar
        from zipTree(it.tasks.sourceJar.archivePath)
    }
}

task javadocJar(type: Jar, dependsOn: 'javadoc') {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives implJar
}

apply plugin: 'maven-publish'

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifacts = [implJar, sourceJar, javadocJar]

            repositories {
                maven {
                    url = System.getenv('REPO_' + (version.endsWith('-SNAPSHOT') ? 'SNAPSHOTS' : 'RELEASES')) ?: "$rootProject.buildDir/repo"
                }
            }
        }
    }
}

license {
    header = rootProject.file('LICENSE')
    include '**/*.java'
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.13'
}
